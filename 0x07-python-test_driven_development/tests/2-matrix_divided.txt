#!/usr/bin/python3
"""
The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Importing the function from the module:
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Checking for module docstring:
	 >>> m = __import__("2-matrix_divided").__doc__
	 >>> len(m) > 1
	 True

Checking for function docstring:
	 >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
         >>> len(f) > 1
         True

Checking for passing none as matrix:
	 >>> matrix_divided(none, 2)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for passing None as div:
	 >>> matrix_divided([[2, 4, 5], [1, 5, 7]], None)
	 Traceback (most recent call last):
         ...
	 TypeError: div must be a number

Checking for matrix String:

	 >>> matrix_divided("matrix", 3)
	 Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Checking for uneven matrix:
	 >>> matrix_divided([[1, 2, 3], [4, 5, 6, 9]], 2)
	 Traceback (most recent call last):
         ...
	 TypeError: Each row of the matrix must have the same size

Checking for div as String:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
         >>> matrix_divided(matrix, "div")
         Traceback (most recent call last):
         ...
         TypeError: div must be a number

Checking for division by zero:
	 >>> matrix_divided(matrix, 0)
	 Traceback (most recent call last):
	 ...
	 ZeroDivisionError: division by zero

Checking for regular division:
	 >>> matrix = [[1, 2, 3], [4, 5, 6]]
	 >>> matrix_divided(matrix, 3)
	 [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	 >>> matrix
	 [[1, 2, 3], [4, 5, 6]]

Checking for mix of ints and floats:
	 >>> matrix = [[1, 2.4, 3], [4.1, 5, 6.8]]
	 >>> matrix_divided(matrix, 11)
	 [[0.09, 0.22, 0.27], [0.37, 0.45, 0.62]]
	 >>> matrix
	 [[1, 2.4, 3], [4.1, 5, 6.8]]



Checking for empty matrix:
	 >>> matrix = []
	 >>> matrix_divided(matrix, 1)
	 []
	 >>> matrix
	 []

